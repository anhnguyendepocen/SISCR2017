setwd("/Users/rhubb/Documents/PEPPER")
library(compiler); enableJIT(3)
library(splines)
library(runjags)
library(clusterPower) # for expit() function
library(pROC) # for plotting ROC curve/calculating AUC
library(ggplot2) # for plotting
library(dplyr) # data manipulation
library(ggsci) # fun plot colors
#library(rjags)
library(mcmcplots)
library(gridExtra)
library(grid)
source("3.0 - Data Generation Functions Source Code_20170504.R") # source in data generation functions
source("3.1 - JAGS Models Source Code_20170504.R") # source in JAGs models
pnorm(4/sqrt(2))
4/sqrt(2)
pnorm(3.5/sqrt(2))
auc <- function(d,v){
pnorm(d/sqrt(2*v))}
auc(20,25)
auc(35,100)
auc(15,25)
auc(10,25)
auc(12,25)
auc(14,25)
auc(12,25)
auc(10,100)
auc(15,100)
auc(0.2,0.05)
auc(0.1,0.05)
auc(13,25)
auc(12,25)
N_each<-100 # number of simulated datasets under each missingness mechanism
# New parameters 6/14/17 to reflect AUC for BMI of 0.62, AUC for RPG of 0.86 and
# AUC for FPG of 0.96
sim_data_params<-list(n=1000,minAge=10 ,maxAge=18,p_white=.57,
DM_B_int=-2.64,DM_B_age=0.01,DM_B_white=-0.7, SD_DM = 0.2,
BMI_mean_DM=.5,BMI_mean_noDM=.6,BMI_var=.05,
FPG_B_int= 55 ,FPG_B_DM=12,FPG_var=25,
RPG_B_int = 105 ,RPG_B_DM = 15 ,RPG_var = 100,
sensDM = .80,specDM = .95 ,
sensFH = .50 ,specFH = .70 ,
sensCM = .20 ,specCM = .99)
# specified sensitivites and specificities imply "true" regression betas
#  such that codeFH_B_int+codeFH_B_DM==sensFH when DM=1
sim_data_params<-c(sim_data_params,
codeDM_B_int=1-sim_data_params$specDM, codeDM_B_DM=sim_data_params$sensDM - ((1-sim_data_params$specDM)),
codeFH_B_int=1-sim_data_params$specFH, codeFH_B_DM=sim_data_params$sensFH - ((1-sim_data_params$specFH)),
codeCM_B_int=1-sim_data_params$specCM, codeCM_B_DM=sim_data_params$sensCM - ((1-sim_data_params$specCM)))
Sys.Date()
install.packages("INLA", repos=https://www.math.ntnu.no/inla/R/stable)
install.packages("INLA", repos=https://www.math.ntnu.no/inla/R/stable)
install.packages("INLA")
install.packages("INLA", repos="https://www.math.ntnu.no/inla/R/stable")
library(INLA)
install.packages("MatrixModels")
install.packages("rjags")
data <- reaad.table("/Users/rhub/SISCR2017/data/fev.txt")
data <- read.table("/Users/rhub/SISCR2017/data/fev.txt",header=T)
data <- read.table("/Users/rhubb/SISCR2017/data/fev.txt",header=T)
setwd("/Users/rhubb/SISCR2017/data/")
setwd("/Users/rhubb/Documents/SISCR2017/data/")
data <- read.table("/Users/rhubb/Documents/SISCR2017/data/fev.txt",header=T)
head(data)
summary(data)
data <- read.table("/Users/rhubb/Documents/SISCR2017/data/fev.txt", col.names=c("seqnbr", "subjid", "age", "fev", "height", "sex", "smoke"))
summary(data)
fit = inla(log(fev)~ smoke + age, data=data)
summary(fit)
library(rjags)
install.packages("rjags")
library(rjags)
c(40,60,80,100)*0.3
PP <- function(n.total, nullp, eta=0.95, data=c(12,8), prior.par=c(1,1), B=1000){
# posterior
post.par <- data + prior.par
# samples from posterior distribution
post.sample <- rbeta(B, post.par[1], post.par[2])
# samples new values of x (extending to the maximum sample size)
x.new <- rbinom(B, size=n.total-sum(data), post.sample)
# organize data with first column number of 'responses' and second 'non responses'
data.new <- cbind(x.new, n.total-sum(data)-x.new)
# posterior parameters given predicted data
post.pred.par <- cbind(data.new[,1] + post.par[1], data.new[,2]+ post.par[2])
# posterior probability that P(p > nullp |data)
post.pred <- pbeta(nullp, post.pred.par[,1], post.pred.par[,2], lower.tail=FALSE)
# posterior predictive probability of success
PP <- mean(post.pred > eta)
return(PP)
}
PP(n.total = 100, nullp = 0.3, eta = 0.9, data = c(18,22),prior.par = c(1,1))
PP(n.total = 100, nullp = 0.3, eta = 0.9, data = c(21,39),prior.par = c(1,1))
PP(n.total = 100, nullp = 0.3, eta = 0.9, data = c(30,50),prior.par = c(1,1))
pbetat(p0=0.3, prob=0.5, ab=c(1,1), data=c(34,66))
library(LearnBayes)
pbetat(p0=0.3, prob=0.5, ab=c(1,1), data=c(34,66))
help(pbeta)
pbeta(0.3,(34-1),(66-1), lower.tail = FALSE)
help(pbetat)
pbetat(p0=0.3, prob=0.5, ab=c(1,1), data=c(34,66))
PP(n.total = 100, nullp = 0.3, eta = 0.9, data = c(18,22),prior.par = c(0.3,1))
PP(n.total = 100, nullp = 0.3, eta = 0.9, data = c(21,39),prior.par = c(0.3,1))
PP(n.total = 100, nullp = 0.3, eta = 0.9, data = c(30,50),prior.par = c(0.3,1))
PP(n.total = 100, nullp = 0.3, eta = 0.9, data = c(16,22),prior.par = c(1,1))
PP(n.total = 100, nullp = 0.3, eta = 0.9, data = c(16,22),prior.par = c(0.3,1))
PP(n.total = 100, nullp = 0.3, eta = 0.9, data = c(17,22),prior.par = c(1,1))
PP(n.total = 100, nullp = 0.3, eta = 0.9, data = c(17,22),prior.par = c(0.3,1))
tab <- rbind(c("First analysis",17,22),c("Second analysis",21,39),c("Third analysis",30,50),c("End of trial",34,66))
tab
library(pander)
pander(tab)
help(pander)
row.names <- c("Timepoint","Successes","Failures")
row.names(tab) <- c("Timepoint","Successes","Failures")
col.names(tab) <- c("Timepoint","Successes","Failures")
colnames(tab) <- c("Timepoint","Successes","Failures")
pander(tab)
install.packages("INLA", repos=https://www.math.ntnu.no/inla/R/stable)
install.packages("INLA", repos="https://www.math.ntnu.no/inla/R/stable"")
install.packages("rjags")
install.packages("INLA", repos="https://www.math.ntnu.no/inla/R/stable")
install.packages("INLA", repos = "https://www.math.ntnu.no/inla/R/stable")
install.packages("INLA", repos = "https://www.math.ntnu.no/inla/R/stable")
